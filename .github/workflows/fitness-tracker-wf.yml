---
name: Fitness Tracker Workflow

on:
  push:
    branches:
      - main
      - feature/models
    # paths-ignore:
    #   - "src/simulations/**"

jobs:
  Run-Linting-And-Unit-Tests:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      # Setup Python (faster than using Python container)
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      # - name: Install pipenv
      #   run: |
      #     python -m pip install --upgrade pipenv wheel
      # - id: cache-pipenv
      #   uses: actions/cache@v1
      #   with:
      #     path: ~/.local/share/virtualenvs
      #     key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}

      # - name: Install dependencies
      #   if: steps.cache-pipenv.outputs.cache-hit != 'true'
      #   run: |
      #     pipenv install --deploy --dev

      # - name: install numpy
      #   run: |
      #     pip install numpy

      - name: Install Dependencies
        run: |
          pip install flake8 mypy # yamllint

      - name: Lint with flake8
        # continue-on-error: true
        run: |
          flake8 --ignore=E402,E501 .

      - name: Static type checks with mypy
        run: |
          mypy src/

      - name: Run ShellCheck
        uses: ludeeus/action-shellcheck@master

      # - name: yamllint
      #   run: |
      #     yamllint .
      - name: "Yamllint"
        uses: karancode/yamllint-github-action@master
        with:
          yamllint_file_or_dir: "."
          yamllint_strict: false
          yamllint_comment: true
        # env:
        #   GITHUB_ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Run test suite
      #   run: |
      #     pipenv run test -v
      #     pipenv run test -k "test_training and not test_simulation"

  # docs:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     # - uses: ammaraskar/sphinx-action@master
  #     #   with:
  #     #     docs-folder: "docs/"
  #     - uses: ammaraskar/sphinx-problem-matcher@master
  #     - name: Build Sphinx docs
  #       run: |
  #         make dirhtml
  #         sed -i 's/url_root="#"/url_root=""/' _build/dirhtml/index.html || true
